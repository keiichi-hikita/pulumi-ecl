# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from .. import utilities, tables

class GetTenantResult:
    """
    A collection of values returned by getTenant.
    """
    def __init__(__self__, contract_id=None, description=None, region=None, start_time=None, tenant_id=None, tenant_name=None, id=None):
        if contract_id and not isinstance(contract_id, str):
            raise TypeError("Expected argument 'contract_id' to be a str")
        __self__.contract_id = contract_id
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        __self__.description = description
        """
        Description for this tenant.
        """
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        __self__.region = region
        if start_time and not isinstance(start_time, str):
            raise TypeError("Expected argument 'start_time' to be a str")
        __self__.start_time = start_time
        """
        Tenant created time.
        """
        if tenant_id and not isinstance(tenant_id, str):
            raise TypeError("Expected argument 'tenant_id' to be a str")
        __self__.tenant_id = tenant_id
        """
        ID of the tenant.
        """
        if tenant_name and not isinstance(tenant_name, str):
            raise TypeError("Expected argument 'tenant_name' to be a str")
        __self__.tenant_name = tenant_name
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        id is the provider-assigned unique ID for this managed resource.
        """

async def get_tenant(tenant_name=None,opts=None):
    """
    Use this data source to get the ID of an Enterprise Cloud tenant.
    """
    __args__ = dict()

    __args__['tenantName'] = tenant_name
    __ret__ = await pulumi.runtime.invoke('ecl:sss/getTenant:getTenant', __args__, opts=opts)

    return GetTenantResult(
        contract_id=__ret__.get('contractId'),
        description=__ret__.get('description'),
        region=__ret__.get('region'),
        start_time=__ret__.get('startTime'),
        tenant_id=__ret__.get('tenantId'),
        tenant_name=__ret__.get('tenantName'),
        id=__ret__.get('id'))
