# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class ImageMemberAccepter(pulumi.CustomResource):
    def __init__(__self__, __name__, __opts__=None, image_member_id=None, region=None, status=None):
        """Create a ImageMemberAccepter resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not image_member_id:
            raise TypeError('Missing required property image_member_id')
        elif not isinstance(image_member_id, basestring):
            raise TypeError('Expected property image_member_id to be a basestring')
        __self__.image_member_id = image_member_id
        __props__['imageMemberId'] = image_member_id

        if region and not isinstance(region, basestring):
            raise TypeError('Expected property region to be a basestring')
        __self__.region = region
        __props__['region'] = region

        if not status:
            raise TypeError('Missing required property status')
        elif not isinstance(status, basestring):
            raise TypeError('Expected property status to be a basestring')
        __self__.status = status
        __props__['status'] = status

        super(ImageMemberAccepter, __self__).__init__(
            'ecl:imagestorages/imageMemberAccepter:ImageMemberAccepter',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'imageMemberId' in outs:
            self.image_member_id = outs['imageMemberId']
        if 'region' in outs:
            self.region = outs['region']
        if 'status' in outs:
            self.status = outs['status']
