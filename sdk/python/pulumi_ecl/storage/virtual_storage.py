# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from .. import utilities, tables

class VirtualStorage(pulumi.CustomResource):
    description: pulumi.Output[str]
    error_message: pulumi.Output[str]
    host_routes: pulumi.Output[list]
    ip_addr_pool: pulumi.Output[dict]
    name: pulumi.Output[str]
    network_id: pulumi.Output[str]
    subnet_id: pulumi.Output[str]
    volume_type_id: pulumi.Output[str]
    volume_type_name: pulumi.Output[str]
    def __init__(__self__, resource_name, opts=None, description=None, error_message=None, host_routes=None, ip_addr_pool=None, name=None, network_id=None, subnet_id=None, volume_type_id=None, volume_type_name=None, __name__=None, __opts__=None):
        """
        Create a VirtualStorage resource with the given unique name, props, and options.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description
        :param pulumi.Input[str] error_message
        :param pulumi.Input[list] host_routes
        :param pulumi.Input[dict] ip_addr_pool
        :param pulumi.Input[str] name
        :param pulumi.Input[str] network_id
        :param pulumi.Input[str] subnet_id
        :param pulumi.Input[str] volume_type_id
        :param pulumi.Input[str] volume_type_name
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if not resource_name:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(resource_name, str):
            raise TypeError('Expected resource name to be a string')
        if opts and not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['description'] = description

        __props__['error_message'] = error_message

        __props__['host_routes'] = host_routes

        if ip_addr_pool is None:
            raise TypeError('Missing required property ip_addr_pool')
        __props__['ip_addr_pool'] = ip_addr_pool

        __props__['name'] = name

        if network_id is None:
            raise TypeError('Missing required property network_id')
        __props__['network_id'] = network_id

        if subnet_id is None:
            raise TypeError('Missing required property subnet_id')
        __props__['subnet_id'] = subnet_id

        __props__['volume_type_id'] = volume_type_id

        __props__['volume_type_name'] = volume_type_name

        super(VirtualStorage, __self__).__init__(
            'ecl:storage/virtualStorage:VirtualStorage',
            resource_name,
            __props__,
            opts)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

