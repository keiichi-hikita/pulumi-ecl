# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class Tenant(pulumi.CustomResource):
    def __init__(__self__, __name__, __opts__=None, contract_id=None, description=None, tenant_name=None, tenant_region=None):
        """Create a Tenant resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if contract_id and not isinstance(contract_id, basestring):
            raise TypeError('Expected property contract_id to be a basestring')
        __self__.contract_id = contract_id
        __props__['contractId'] = contract_id

        if not description:
            raise TypeError('Missing required property description')
        elif not isinstance(description, basestring):
            raise TypeError('Expected property description to be a basestring')
        __self__.description = description
        __props__['description'] = description

        if not tenant_name:
            raise TypeError('Missing required property tenant_name')
        elif not isinstance(tenant_name, basestring):
            raise TypeError('Expected property tenant_name to be a basestring')
        __self__.tenant_name = tenant_name
        __props__['tenantName'] = tenant_name

        if not tenant_region:
            raise TypeError('Missing required property tenant_region')
        elif not isinstance(tenant_region, basestring):
            raise TypeError('Expected property tenant_region to be a basestring')
        __self__.tenant_region = tenant_region
        __props__['tenantRegion'] = tenant_region

        __self__.start_time = pulumi.runtime.UNKNOWN
        __self__.tenant_id = pulumi.runtime.UNKNOWN

        super(Tenant, __self__).__init__(
            'ecl:sss/tenant:Tenant',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'contractId' in outs:
            self.contract_id = outs['contractId']
        if 'description' in outs:
            self.description = outs['description']
        if 'startTime' in outs:
            self.start_time = outs['startTime']
        if 'tenantId' in outs:
            self.tenant_id = outs['tenantId']
        if 'tenantName' in outs:
            self.tenant_name = outs['tenantName']
        if 'tenantRegion' in outs:
            self.tenant_region = outs['tenantRegion']
