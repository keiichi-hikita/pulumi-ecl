// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to get the ID of an available Enterprise Cloud flavor.
func LookupFlavor(ctx *pulumi.Context, args *GetFlavorArgs) (*GetFlavorResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["disk"] = args.Disk
		inputs["minDisk"] = args.MinDisk
		inputs["minRam"] = args.MinRam
		inputs["name"] = args.Name
		inputs["ram"] = args.Ram
		inputs["region"] = args.Region
		inputs["rxTxFactor"] = args.RxTxFactor
		inputs["swap"] = args.Swap
		inputs["vcpus"] = args.Vcpus
	}
	outputs, err := ctx.Invoke("ecl:compute/getFlavor:getFlavor", inputs)
	if err != nil {
		return nil, err
	}
	return &GetFlavorResult{
		IsPublic: outputs["isPublic"],
		Region: outputs["region"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getFlavor.
type GetFlavorArgs struct {
	// The exact amount of disk (in gigabytes).
	Disk interface{}
	// The minimum amount of disk (in gigabytes).
	MinDisk interface{}
	// The minimum amount of RAM (in megabytes).
	MinRam interface{}
	// The name of the flavor.
	Name interface{}
	// The exact amount of RAM (in megabytes).
	Ram interface{}
	// The region in which to obtain the V2 Compute client.
	// If omitted, the `region` argument of the provider is used.
	Region interface{}
	// The `rx_tx_factor` of the flavor.
	RxTxFactor interface{}
	// The amount of swap (in gigabytes).
	Swap interface{}
	// The amount of VCPUs.
	Vcpus interface{}
}

// A collection of values returned by getFlavor.
type GetFlavorResult struct {
	// Whether the flavor is public or private.
	IsPublic interface{}
	Region interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
