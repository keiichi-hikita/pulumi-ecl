// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package imagestorages

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ImageMemberAccepter struct {
	s *pulumi.ResourceState
}

// NewImageMemberAccepter registers a new resource with the given unique name, arguments, and options.
func NewImageMemberAccepter(ctx *pulumi.Context,
	name string, args *ImageMemberAccepterArgs, opts ...pulumi.ResourceOpt) (*ImageMemberAccepter, error) {
	if args == nil || args.ImageMemberId == nil {
		return nil, errors.New("missing required argument 'ImageMemberId'")
	}
	if args == nil || args.Status == nil {
		return nil, errors.New("missing required argument 'Status'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["imageMemberId"] = nil
		inputs["region"] = nil
		inputs["status"] = nil
	} else {
		inputs["imageMemberId"] = args.ImageMemberId
		inputs["region"] = args.Region
		inputs["status"] = args.Status
	}
	s, err := ctx.RegisterResource("ecl:imagestorages/imageMemberAccepter:ImageMemberAccepter", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ImageMemberAccepter{s: s}, nil
}

// GetImageMemberAccepter gets an existing ImageMemberAccepter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetImageMemberAccepter(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ImageMemberAccepterState, opts ...pulumi.ResourceOpt) (*ImageMemberAccepter, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["imageMemberId"] = state.ImageMemberId
		inputs["region"] = state.Region
		inputs["status"] = state.Status
	}
	s, err := ctx.ReadResource("ecl:imagestorages/imageMemberAccepter:ImageMemberAccepter", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ImageMemberAccepter{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ImageMemberAccepter) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ImageMemberAccepter) ID() *pulumi.IDOutput {
	return r.s.ID()
}

func (r *ImageMemberAccepter) ImageMemberId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["imageMemberId"])
}

func (r *ImageMemberAccepter) Region() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["region"])
}

func (r *ImageMemberAccepter) Status() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["status"])
}

// Input properties used for looking up and filtering ImageMemberAccepter resources.
type ImageMemberAccepterState struct {
	ImageMemberId interface{}
	Region interface{}
	Status interface{}
}

// The set of arguments for constructing a ImageMemberAccepter resource.
type ImageMemberAccepterArgs struct {
	ImageMemberId interface{}
	Region interface{}
	Status interface{}
}
