// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package dns

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to get the ID of an Enterprise Cloud zone.
// Manages a V2 zone resource within Enterprise Cloud.
func LookupDnsZone(ctx *pulumi.Context, args *GetDnsZoneArgs) (*GetDnsZoneResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["attributes"] = args.Attributes
		inputs["createdAt"] = args.CreatedAt
		inputs["description"] = args.Description
		inputs["domainName"] = args.DomainName
		inputs["email"] = args.Email
		inputs["masters"] = args.Masters
		inputs["name"] = args.Name
		inputs["poolId"] = args.PoolId
		inputs["projectId"] = args.ProjectId
		inputs["region"] = args.Region
		inputs["serial"] = args.Serial
		inputs["status"] = args.Status
		inputs["transferredAt"] = args.TransferredAt
		inputs["ttl"] = args.Ttl
		inputs["type"] = args.Type
		inputs["updatedAt"] = args.UpdatedAt
		inputs["version"] = args.Version
	}
	outputs, err := ctx.Invoke("ecl:dns/getDnsZone:getDnsZone", inputs)
	if err != nil {
		return nil, err
	}
	return &GetDnsZoneResult{
		Attributes: outputs["attributes"],
		CreatedAt: outputs["createdAt"],
		Description: outputs["description"],
		DomainName: outputs["domainName"],
		Email: outputs["email"],
		Masters: outputs["masters"],
		Name: outputs["name"],
		PoolId: outputs["poolId"],
		ProjectId: outputs["projectId"],
		Region: outputs["region"],
		Serial: outputs["serial"],
		Status: outputs["status"],
		TransferredAt: outputs["transferredAt"],
		Ttl: outputs["ttl"],
		Type: outputs["type"],
		UpdatedAt: outputs["updatedAt"],
		Version: outputs["version"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getDnsZone.
type GetDnsZoneArgs struct {
	Attributes interface{}
	// Date / Time when zone was created.
	CreatedAt interface{}
	// The description of the zone.
	Description interface{}
	// Domain name of the zone.
	DomainName interface{}
	// e-mail for the zone.
	// Used in SOA records for the zone.
	Email interface{}
	// For secondary zones.
	// The servers to slave from to get DNS information.
	Masters interface{}
	// DNS Name for the zone.
	Name interface{}
	// ID for the pool hosting this zone. 
	PoolId interface{}
	// ID for the project(tenant) that owns the zone.
	ProjectId interface{}
	// The region of the zone.
	Region interface{}
	// Current serial number for the zone.
	Serial interface{}
	// Status of the zone.
	Status interface{}
	// For secondary zones.
	// The last time an update was retrieved from the master servers.
	TransferredAt interface{}
	// TTL (Time to Live) for the zone.
	Ttl interface{}
	// Type of zone.
	// PRIMARY is controlled by ECL2.0 DNS,
	// SECONDARY zones are slaved from another DNS Server.
	// Defaults to PRIMARY.
	Type interface{}
	// Date / Time when zone last updated.
	UpdatedAt interface{}
	// Version of the zone.
	Version interface{}
}

// A collection of values returned by getDnsZone.
type GetDnsZoneResult struct {
	// (Optional) See Argument Reference above.
	Attributes interface{}
	// See Argument Reference above.
	CreatedAt interface{}
	// See Argument Reference above.
	Description interface{}
	// See Argument Reference above.
	DomainName interface{}
	// See Argument Reference above.
	// This parameter is not currently supported.
	// It always returns an empty string.
	Email interface{}
	// See Argument Reference above.
	// This parameter is not currently supported.
	// It always returns an empty string.
	Masters interface{}
	// See Argument Reference above.
	Name interface{}
	// See Argument Reference above.
	// This parameter is not currently supported.
	// It always returns an empty string.
	PoolId interface{}
	// See Argument Reference above.
	ProjectId interface{}
	// See Argument Reference above.
	Region interface{}
	// See Argument Reference above.
	// This parameter is not currently supported.
	// It always returns zero.
	Serial interface{}
	// See Argument Reference above.
	Status interface{}
	// (Optional)	See Argument Reference above.
	// This parameter is not currently supported.
	// It always returns null.
	TransferredAt interface{}
	// See Argument Reference above.
	// This parameter is not currently supported.
	// It always returns zero.
	Ttl interface{}
	// See Argument Reference above.
	// This parameter is not currently supported.
	// It always returns an empty string.
	Type interface{}
	// See Argument Reference above.
	UpdatedAt interface{}
	// See Argument Reference above.
	// This parameter is not currently supported.
	// It always returns 1.
	Version interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
