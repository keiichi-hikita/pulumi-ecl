// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class StaticRoute extends pulumi.CustomResource {
    /**
     * Get an existing StaticRoute resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StaticRouteState, opts?: pulumi.CustomResourceOptions): StaticRoute {
        return new StaticRoute(name, <any>state, { ...opts, id: id });
    }

    public readonly awsGwId!: pulumi.Output<string | undefined>;
    public readonly azureGwId!: pulumi.Output<string | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly destination!: pulumi.Output<string>;
    public readonly gcpGwId!: pulumi.Output<string | undefined>;
    public readonly interdcGwId!: pulumi.Output<string | undefined>;
    public readonly internetGwId!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly nexthop!: pulumi.Output<string>;
    public readonly region!: pulumi.Output<string>;
    public readonly serviceType!: pulumi.Output<string>;
    public readonly tenantId!: pulumi.Output<string>;
    public readonly vpnGwId!: pulumi.Output<string>;

    /**
     * Create a StaticRoute resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StaticRouteArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StaticRouteArgs | StaticRouteState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as StaticRouteState | undefined;
            inputs["awsGwId"] = state ? state.awsGwId : undefined;
            inputs["azureGwId"] = state ? state.azureGwId : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["destination"] = state ? state.destination : undefined;
            inputs["gcpGwId"] = state ? state.gcpGwId : undefined;
            inputs["interdcGwId"] = state ? state.interdcGwId : undefined;
            inputs["internetGwId"] = state ? state.internetGwId : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["nexthop"] = state ? state.nexthop : undefined;
            inputs["region"] = state ? state.region : undefined;
            inputs["serviceType"] = state ? state.serviceType : undefined;
            inputs["tenantId"] = state ? state.tenantId : undefined;
            inputs["vpnGwId"] = state ? state.vpnGwId : undefined;
        } else {
            const args = argsOrState as StaticRouteArgs | undefined;
            if (!args || args.destination === undefined) {
                throw new Error("Missing required property 'destination'");
            }
            if (!args || args.nexthop === undefined) {
                throw new Error("Missing required property 'nexthop'");
            }
            if (!args || args.serviceType === undefined) {
                throw new Error("Missing required property 'serviceType'");
            }
            inputs["awsGwId"] = args ? args.awsGwId : undefined;
            inputs["azureGwId"] = args ? args.azureGwId : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["destination"] = args ? args.destination : undefined;
            inputs["gcpGwId"] = args ? args.gcpGwId : undefined;
            inputs["interdcGwId"] = args ? args.interdcGwId : undefined;
            inputs["internetGwId"] = args ? args.internetGwId : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["nexthop"] = args ? args.nexthop : undefined;
            inputs["region"] = args ? args.region : undefined;
            inputs["serviceType"] = args ? args.serviceType : undefined;
            inputs["tenantId"] = args ? args.tenantId : undefined;
            inputs["vpnGwId"] = args ? args.vpnGwId : undefined;
        }
        super("ecl:network/staticRoute:StaticRoute", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering StaticRoute resources.
 */
export interface StaticRouteState {
    readonly awsGwId?: pulumi.Input<string>;
    readonly azureGwId?: pulumi.Input<string>;
    readonly description?: pulumi.Input<string>;
    readonly destination?: pulumi.Input<string>;
    readonly gcpGwId?: pulumi.Input<string>;
    readonly interdcGwId?: pulumi.Input<string>;
    readonly internetGwId?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly nexthop?: pulumi.Input<string>;
    readonly region?: pulumi.Input<string>;
    readonly serviceType?: pulumi.Input<string>;
    readonly tenantId?: pulumi.Input<string>;
    readonly vpnGwId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StaticRoute resource.
 */
export interface StaticRouteArgs {
    readonly awsGwId?: pulumi.Input<string>;
    readonly azureGwId?: pulumi.Input<string>;
    readonly description?: pulumi.Input<string>;
    readonly destination: pulumi.Input<string>;
    readonly gcpGwId?: pulumi.Input<string>;
    readonly interdcGwId?: pulumi.Input<string>;
    readonly internetGwId?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly nexthop: pulumi.Input<string>;
    readonly region?: pulumi.Input<string>;
    readonly serviceType: pulumi.Input<string>;
    readonly tenantId?: pulumi.Input<string>;
    readonly vpnGwId?: pulumi.Input<string>;
}
