"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
class User extends pulumi.CustomResource {
    /**
     * Get an existing User resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new User(name, state, Object.assign({}, opts, { id: id }));
    }
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["brandId"] = state ? state.brandId : undefined;
            inputs["contractId"] = state ? state.contractId : undefined;
            inputs["contractOwner"] = state ? state.contractOwner : undefined;
            inputs["externalReferenceId"] = state ? state.externalReferenceId : undefined;
            inputs["keystoneEndpoint"] = state ? state.keystoneEndpoint : undefined;
            inputs["keystoneName"] = state ? state.keystoneName : undefined;
            inputs["keystonePassword"] = state ? state.keystonePassword : undefined;
            inputs["loginId"] = state ? state.loginId : undefined;
            inputs["loginIntegration"] = state ? state.loginIntegration : undefined;
            inputs["mailAddress"] = state ? state.mailAddress : undefined;
            inputs["notifyPassword"] = state ? state.notifyPassword : undefined;
            inputs["password"] = state ? state.password : undefined;
            inputs["sssEndpoint"] = state ? state.sssEndpoint : undefined;
            inputs["startTime"] = state ? state.startTime : undefined;
            inputs["userId"] = state ? state.userId : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.loginId === undefined) {
                throw new Error("Missing required property 'loginId'");
            }
            if (!args || args.mailAddress === undefined) {
                throw new Error("Missing required property 'mailAddress'");
            }
            inputs["loginId"] = args ? args.loginId : undefined;
            inputs["mailAddress"] = args ? args.mailAddress : undefined;
            inputs["notifyPassword"] = args ? args.notifyPassword : undefined;
            inputs["password"] = args ? args.password : undefined;
            inputs["brandId"] = undefined /*out*/;
            inputs["contractId"] = undefined /*out*/;
            inputs["contractOwner"] = undefined /*out*/;
            inputs["externalReferenceId"] = undefined /*out*/;
            inputs["keystoneEndpoint"] = undefined /*out*/;
            inputs["keystoneName"] = undefined /*out*/;
            inputs["keystonePassword"] = undefined /*out*/;
            inputs["loginIntegration"] = undefined /*out*/;
            inputs["sssEndpoint"] = undefined /*out*/;
            inputs["startTime"] = undefined /*out*/;
            inputs["userId"] = undefined /*out*/;
        }
        super("ecl:sss/user:User", name, inputs, opts);
    }
}
exports.User = User;
//# sourceMappingURL=user.js.map